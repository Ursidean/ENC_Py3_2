import mcl
analysis_id = mcl.createAnalysis()
mcl.loadMapActual(analysis_id, r'./2ClassTest/MapA.asc')
mcl.loadMapSimulated(analysis_id, r'./2ClassTest/MapB.asc')
# mcl.loadMaskingMap(analysis_id, <<mask_file_path>>)
mcl.loadFuzzyWeights(analysis_id, r'./2ClassTest/coeff.txt')
fk = mcl.getFuzzyKappa(analysis_id)
print(fk)

analysis_id = mcl.createAnalysis()
mcl.loadMapActual(analysis_id, r'./3ClassTest/MapA.asc')
mcl.loadMapSimulated(analysis_id, r'./3ClassTest/MapB.asc')
# mcl.loadMaskingMap(analysis_id, <<mask_file_path>>)
mcl.loadFuzzyWeights(analysis_id, r'./3ClassTest/coeff.txt')
fk = mcl.getFuzzyKappa(analysis_id)
print(fk)

analysis_id = mcl.createAnalysis()
mcl.loadMapActual(analysis_id, r'./BerlinTest/berlin_2000.asc')
mcl.loadMapSimulated(analysis_id, r'./BerlinTest/Land use map_2000-Jan-01 00_00_00.rst')
# mcl.loadMaskingMap(analysis_id, <<mask_file_path>>)
mcl.loadFuzzyWeights(analysis_id, r'./BerlinTest/coeff2.txt')
fk = mcl.getFuzzyKappa(analysis_id)
print(fk)

analysis_id = mcl.createAnalysis()
mcl.loadMapActual(analysis_id, r'./BerlinTest/berlin_2000.asc')
mcl.loadMapSimulated(analysis_id, r'./BerlinTest/Land use map_2000-Jan-01 00_00_00.rst')
mcl.loadOriginalMap(analysis_id, r'./BerlinTest/berlin_1990.asc')
mcl.loadTransitionFuzzyWeights(analysis_id, r'./BerlinTest/coefficients.txt')
fks = mcl.getFuzzyKappaSim(analysis_id)
print(fks)